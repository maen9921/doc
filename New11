package databasejava;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Stack;

class Class{
    
    private long id;
    private String name;
    private int numberStudents;
    
    public Class(long id, String name, int numberStudents){
        
        this.id = id;
        this.name = name;
        this.numberStudents = numberStudents;
    }
    
    public void setID(long id){
        
        this.id = id;
    }
    public void setName(String name){
        
        this.name = name;
    }
    public void setNumStudent(int numberStudents){
        
        this.numberStudents = numberStudents;
    }
    
    public long getID(){
        
        return this.id;
    }
    public String getName(){
        
        return this.name;
    }
    public int getNumStudent(){
        
        return this.numberStudents;
    }
}

class Student{
    
    private long id;
    private String name;
    private int age;
    private int grade;
    private Class classs;
    
    public Student(long id, String name, int age, int grade, Class classs){
        
        this.id = id;
        this.name = name;
        this.age = age;
        this.grade = grade;
        this.classs = classs;
    }
    
    public void setID(long id){
        
        this.id = id;
    }
    public void setName(String name){
        
        this.name = name;
    }
    public void setAge(int age){
        
        this.age = age;
    }
    public void setGrade(int grade){
        
        this.grade = grade;
    }
    public void setClassID(Class classs){
        
        this.classs = classs;
    }
    
    public long getID(){
        
        return this.id;
    }
    public String getName(){
        
        return this.name;
    }
    public int getAge(){
        
        return this.age;
    }
    public int getGrade(){
        
        return this.grade;
    }
    public Class getClassID(){
        
        return this.classs;
    }
}

public class DatabaseJava {

    private static Connection conn;
    private static PreparedStatement stmt;
    
    public static void connectDatabase(){
        
        try{       
           java.lang.Class.forName("com.mysql.jdbc.Driver");    
           System.out.println("Driver loaded");

           conn = (Connection) DriverManager.getConnection
           ("jdbc:mysql://localhost/school", "root", "");
      
           System.out.println("Database connected\n");
       }
       catch(Exception ex) {
            System.out.println("The Server doesnt work "+ex);   
            System.exit(0);
       }
    }  
    
    public static void getData(ArrayList<Student> data) throws SQLException{
        
        String sql = "select * from student, class where class.id = student.classid";
        stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
        while(rs.next()){
            long id = rs.getLong(1);
            String name = rs.getString(2);
            int age = rs.getInt(3);
            int grade = rs.getInt(4);
            long cid = rs.getLong(5);
            long cidd = rs.getLong(6);
            String cname = rs.getString(7);
            int nstudent = rs.getInt(8);
            Class classs = new Class(cid, cname, nstudent);
            
            data.add(new Student(id, name, age, grade, classs));
        }
    }
    
    public static void printAllClassesWithStudents(ArrayList<Student> data){
        
        for(int i=0; i<data.size(); i++){
            System.out.println("Student ID: "+data.get(i).getID());
            System.out.println("Student Name: "+data.get(i).getName());
            System.out.println("Student Age: "+data.get(i).getAge());
            System.out.println("Student Grade: "+data.get(i).getGrade());
            System.out.println("Student Class: "+data.get(i).getClassID().getID());
            System.out.println("Class ID: "+data.get(i).getClassID().getID());
            System.out.println("Class Name: "+data.get(i).getClassID().getName());
            System.out.println("Class Students: "+data.get(i).getClassID().getNumStudent()+"\n");
        }
    }
    
    public static void getAgeAc(ArrayList<Student> data){
        
        int arr[] = new int[data.size()];
        for(int i=0; i<data.size(); i++)
            arr[i] = data.get(i).getAge();
        
        for(int i=0; i<arr.length; i++)
            for(int j=i+1; j<arr.length; j++)
                if(arr[i] > arr[j]){
                   int temp = arr[i];
                   arr[i] = arr[j];
                   arr[j] = temp;
                }
        
        for(int i=0; i<data.size(); i++)
            System.out.println("Age Student"+(i+1)+": "+arr[i]);
    }
    
    public static void getGradeDe(ArrayList<Student> data){
        
        Stack<Long> classes = new Stack<Long>();                
        for(int i=0; i<data.size(); i++)
            if(!classes.contains(data.get(i).getClassID().getID()))
               classes.add(data.get(i).getClassID().getID());
        
        for(int i=0; i<classes.size(); i++){
            int max = data.get(0).getGrade();
            Student st = data.get(0);
            Class cs = data.get(i).getClassID();
            for(int j=0; j<data.size(); j++)
                if(data.get(j).getClassID().getID() == classes.get(i))
                   if(max < data.get(j).getGrade()){ 
                      max = data.get(j).getGrade(); 
                      st = data.get(j);
                      cs = data.get(j).getClassID();
                   }
            
            System.out.println("Class ID: "+cs.getID());
            System.out.println("Class Name: "+cs.getName());
            System.out.println("   Max Grade Student: "+st.getGrade());
            System.out.println("   Student ID: "+st.getID());
            System.out.println("   Student Name: "+st.getName()+"\n");
        }
    }
    
    public static void main(String[] args) throws SQLException {
        
        connectDatabase();
        
        ArrayList<Student> data = new ArrayList<Student>();
        getData(data);       
        printAllClassesWithStudents(data);
        
        System.out.println("Sort Age:");
        getAgeAc(data);
        
        System.out.println("\n"+"Max Grades:");
        getGradeDe(data);
    }
}
